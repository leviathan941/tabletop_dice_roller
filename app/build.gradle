import org.leviathan941.tabletopdiceroller.AndroidSdk
import org.leviathan941.tabletopdiceroller.Dependencies
import org.leviathan941.tabletopdiceroller.Versions

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

static def fixVersionPart(String part) {
    if (part.length() > 1) {
        return part
    } else {
        return "0$part"
    }
}

def getVersionCode = {
    def major = "$versionMajor"
    def minor = fixVersionPart("$versionMinor")
    def patch = fixVersionPart("$versionPatch")
    def versionCode = "$major$minor$patch" as Integer
    return versionCode
}

android {
    compileSdk AndroidSdk.INSTANCE.COMPILE_SDK_VERSION

    defaultConfig {
        applicationId "$appId"
        minSdk AndroidSdk.INSTANCE.MIN_SDK_VERSION
        targetSdk AndroidSdk.INSTANCE.TARGET_SDK_VERSION
        versionCode getVersionCode()
        versionName "$versionMajor.$versionMinor.$versionPatch"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        setProperty("archivesBaseName", "$appBaseName-$versionName")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/db_schemas".toString()
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix "-SNAPSHOT"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Versions.INSTANCE.KOTLIN
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation Dependencies.INSTANCE.androidCoreKtx
    implementation Dependencies.INSTANCE.appCompat

    implementation Dependencies.INSTANCE.material

    implementation Dependencies.INSTANCE.compose.ui
    implementation Dependencies.INSTANCE.compose.runtimeLivedata
    implementation Dependencies.INSTANCE.compose.material
    implementation Dependencies.INSTANCE.compose.uiToolingPreview

    implementation Dependencies.INSTANCE.lifecycle.livedataKtx
    implementation Dependencies.INSTANCE.lifecycle.viewModelKtx
    implementation Dependencies.INSTANCE.lifecycle.viewModelSavedState

    implementation Dependencies.INSTANCE.activityCompose

    implementation Dependencies.INSTANCE.accompanistFlowLayout

    implementation Dependencies.INSTANCE.room.ktx
    kapt Dependencies.INSTANCE.room.compiler

    implementation Dependencies.INSTANCE.dataStorePreferences

    debugImplementation Dependencies.INSTANCE.compose.uiTooling
}